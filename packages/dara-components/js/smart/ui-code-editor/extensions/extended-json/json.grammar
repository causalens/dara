// This file has been taken and adapted from https://github.com/lezer-parser/json/blob/main/src/json.grammar
// The change is marked below, extends the valid chars within strings to allow newlines
@top JsonText { value }

value { True | False | Null | Number | String | Object | Array }

String[isolate] { string }
Object { "{" list<Property>? "}" }
Array  { "[" list<value>? "]" }

Property { PropertyName ":" value }
PropertyName[isolate] { string }

@tokens {
  True  { "true" }
  False { "false" }
  Null  { "null" }

  Number { '-'? int frac? exp?  }
  int  { '0' | $[1-9] @digit* }
  frac { '.' @digit+ }
  exp  { $[eE] $[+\-]? @digit+ }

  string { '"' char* '"' }
  // ONLY CHANGE: added newline as allowed char: `\u{0a}` (\n) and `\u{0d}` (\r)
  char { $[\u{0a}\u{0d}\u{20}\u{21}\u{23}-\u{5b}\u{5d}-\u{10ffff}] | "\\" esc }
  esc  { $["\\\/bfnrt] | "u" hex hex hex hex }
  hex  { $[0-9a-fA-F] }

  whitespace { $[ \n\r\t] }

  "{" "}" "[" "]" "," ":"
}

@skip { whitespace }
list<item> { item ("," item)* }

@external propSource jsonHighlighting from "@lezer/json"

@detectDelim
