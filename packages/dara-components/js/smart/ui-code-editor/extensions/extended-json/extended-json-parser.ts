// This file was generated by lezer-generator and converted to TypeScript.
// To generate, run :
// `pnpm dlx @lezer/generator@^1.0.0 ./path/to/json.grammar -o ./path/to/extended-json-parser`
import { LRParser } from '@lezer/lr';

import { jsonHighlighting } from './highlight';

export const parser = LRParser.deserialize({
    version: 14,
    states: "$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#ClOOQO'#Cr'#CrQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CtOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59W,59WO!iQPO,59WOVQPO,59QOqQPO'#CmO!nQPO,59`OOQO1G.k1G.kOVQPO'#CnO!vQPO,59aOOQO1G.r1G.rOOQO1G.l1G.lOOQO,59X,59XOOQO-E6k-E6kOOQO,59Y,59YOOQO-E6l-E6l",
    stateData: '#O~OeOS~OQSORSOSSOTSOWQO_ROgPO~OVXOgUO~O^[O~PVO[^O~O]_OVhX~OVaO~O]bO^iX~O^dO~O]_OVha~O]bO^ia~O',
    goto: '!kjPPPPPPkPPkqwPPPPk{!RPPP!XP!e!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R',
    nodeNames: 'âš  JsonText True False Null Number String } { Object Property PropertyName : , ] [ Array',
    maxTerm: 25,
    nodeProps: [
        ['isolate', -2, 6, 11, ''],
        ['openedBy', 7, '{', 14, '['],
        ['closedBy', 8, '}', 15, ']'],
    ],
    propSources: [jsonHighlighting],
    skippedNodes: [0],
    repeatNodeCount: 2,
    tokenData:
        ")S~RaXY!WYZ!W]^!Wpq!Wrs!]|}${}!O%Q!Q!R%Z!R![&i![!]&z!}#O'P#P#Q'U#Y#Z'Z#b#c'x#h#i(a#o#p(x#q#r(}~!]Oe~~!`YYZ!]]^!]pq!]qr!]rs#Os#O!]#O#P#T#P;'S!];'S;=`$u<%lO!]~#TOg~~#WXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![$i!c!i$i#T#Z$i~$lR!Q![!]!c!i!]#T#Z!]~$xP;=`<%l!]~%QO]~~%TQ!Q!R%Z!R![&i~%`RT~!O!P%i!g!h%}#X#Y%}~%lP!Q![%o~%tRT~!Q![%o!g!h%}#X#Y%}~&QR{|&Z}!O&Z!Q![&a~&^P!Q![&a~&fPT~!Q![&a~&nST~!O!P%i!Q![&i!g!h%}#X#Y%}~'PO[~~'UO_~~'ZO^~~'^P#T#U'a~'dP#`#a'g~'jP#g#h'm~'pP#X#Y's~'xOR~~'{P#i#j(O~(RP#`#a(U~(XP#`#a([~(aOS~~(dP#f#g(g~(jP#i#j(m~(pP#X#Y(s~(xOQ~~(}OW~~)SOV~",
    tokenizers: [0],
    topRules: { JsonText: [0, 1] },
    tokenPrec: 0,
});
